syntax = "proto3";
package cosmonaut.wayne.wayne;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "wayne/params.proto";
import "wayne/pool.proto";
import "wayne/deposit.proto";
import "wayne/borrow.proto";
import "wayne/user.proto";
import "wayne/interface_apr.proto";
import "wayne/load_pool_response.proto";
// this line is used by starport scaffolding # 1

option go_package = "github.com/cosmonaut/wayne/x/wayne/types";

// Query defines the gRPC querier service.
service Query {
  // Parameters queries the parameters of the module.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/cosmonaut/wayne/wayne/params";
  }
  // Queries a Pool by id.
	rpc Pool(QueryGetPoolRequest) returns (QueryGetPoolResponse) {
		option (google.api.http).get = "/cosmonaut/wayne/wayne/pool/{id}";
	}

	// Queries a list of Pool items.
	rpc PoolAll(QueryAllPoolRequest) returns (QueryAllPoolResponse) {
		option (google.api.http).get = "/cosmonaut/wayne/wayne/pool";
	}

	rpc PoolLoad(QueryLoadPoolRequest) returns (QueryLoadPoolResponse) {
		option (google.api.http).get = "/cosmonaut/wayne/wayne/loadPools";
	}

// Queries a Deposit by id.
	rpc Deposit(QueryGetDepositRequest) returns (QueryGetDepositResponse) {
		option (google.api.http).get = "/cosmonaut/wayne/wayne/deposit/{id}";
	}

	// Queries a list of Deposit items.
	rpc DepositAll(QueryAllDepositRequest) returns (QueryAllDepositResponse) {
		option (google.api.http).get = "/cosmonaut/wayne/wayne/deposit";
	}

// Queries a Borrow by id.
	rpc Borrow(QueryGetBorrowRequest) returns (QueryGetBorrowResponse) {
		option (google.api.http).get = "/cosmonaut/wayne/wayne/borrow/{id}";
	}

	// Queries a list of Borrow items.
	rpc BorrowAll(QueryAllBorrowRequest) returns (QueryAllBorrowResponse) {
		option (google.api.http).get = "/cosmonaut/wayne/wayne/borrow";
	}

// Queries a User by id.
	rpc User(QueryGetUserRequest) returns (QueryGetUserResponse) {
		option (google.api.http).get = "/cosmonaut/wayne/wayne/user/{id}";
	}

	// Queries a list of User items.
	rpc UserAll(QueryAllUserRequest) returns (QueryAllUserResponse) {
		option (google.api.http).get = "/cosmonaut/wayne/wayne/user";
	}

// Queries a InterfaceApr by id.
	rpc InterfaceApr(QueryGetInterfaceAprRequest) returns (QueryGetInterfaceAprResponse) {
		option (google.api.http).get = "/cosmonaut/wayne/wayne/interface_apr/{id}";
	}

	// Queries a list of InterfaceApr items.
	rpc InterfaceAprAll(QueryAllInterfaceAprRequest) returns (QueryAllInterfaceAprResponse) {
		option (google.api.http).get = "/cosmonaut/wayne/wayne/interface_apr";
	}

// Queries a LoadPoolResponse by id.
	rpc LoadPoolResponse(QueryGetLoadPoolResponseRequest) returns (QueryGetLoadPoolResponseResponse) {
		option (google.api.http).get = "/cosmonaut/wayne/wayne/load_pool_response/{id}";
	}

	// Queries a list of LoadPoolResponse items.
	rpc LoadPoolResponseAll(QueryAllLoadPoolResponseRequest) returns (QueryAllLoadPoolResponseResponse) {
		option (google.api.http).get = "/cosmonaut/wayne/wayne/load_pool_response";
	}

// this line is used by starport scaffolding # 2
}

// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false];
}

message QueryGetPoolRequest {
	uint64 id = 1;
}

message QueryGetPoolResponse {
	Pool Pool = 1 [(gogoproto.nullable) = false];
}

message QueryAllPoolRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllPoolResponse {
	repeated Pool Pool = 1 [(gogoproto.nullable) = false];
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryLoadPoolRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryLoadPoolResponse {
	repeated LoadPoolResponse LoadPoolResponse = 1;
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
} 

message QueryGetDepositRequest {
	uint64 id = 1;
}

message QueryGetDepositResponse {
	Deposit Deposit = 1 [(gogoproto.nullable) = false];
}

message QueryAllDepositRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllDepositResponse {
	repeated Deposit Deposit = 1 [(gogoproto.nullable) = false];
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetBorrowRequest {
	uint64 id = 1;
}

message QueryGetBorrowResponse {
	Borrow Borrow = 1 [(gogoproto.nullable) = false];
}

message QueryAllBorrowRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllBorrowResponse {
	repeated Borrow Borrow = 1 [(gogoproto.nullable) = false];
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetUserRequest {
	uint64 id = 1;
}

message QueryGetUserResponse {
	User User = 1 [(gogoproto.nullable) = false];
}

message QueryAllUserRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllUserResponse {
	repeated User User = 1 [(gogoproto.nullable) = false];
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetInterfaceAprRequest {
	uint64 id = 1;
}

message QueryGetInterfaceAprResponse {
	InterfaceApr InterfaceApr = 1 [(gogoproto.nullable) = false];
}

message QueryAllInterfaceAprRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllInterfaceAprResponse {
	repeated InterfaceApr InterfaceApr = 1 [(gogoproto.nullable) = false];
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetLoadPoolResponseRequest {
	uint64 id = 1;
}

message QueryGetLoadPoolResponseResponse {
	LoadPoolResponse LoadPoolResponse = 1 [(gogoproto.nullable) = false];
}

message QueryAllLoadPoolResponseRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllLoadPoolResponseResponse {
	repeated LoadPoolResponse LoadPoolResponse = 1 [(gogoproto.nullable) = false];
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

// this line is used by starport scaffolding # 3
